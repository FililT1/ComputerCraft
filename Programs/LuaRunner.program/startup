os.loadAPI("loader")
SpeedOS = loader.OS()

SpeedOS.ToolBarColour = colours.lightGrey
SpeedOS.ToolBarTextColour = colours.white

fs=SpeedOS.fs

local bRunning = true
local tCommandHistory = {}
local tEnv = {
	["exit"] = function()
		bRunning = false
	end,
}
setmetatable( tEnv, { __index = getfenv() } )

os.loadAPI("SpeedAPI/windows")
windows.clearScreen(colors.white)
term.setTextColor(colors.red)
term.setCursorPos(1,1)
print( "Lua 5.2 Copyright (c) 1994-2024 Lua.org, PUC-Rio" )
term.setTextColor(colors.gray)
print("Type an expression and press Enter to execute it")
print("Type exit() to exit")
term.setTextColor( colors.lightGray )

while bRunning do
	--if term.isColour() then
	--	term.setTextColour( colours.yellow )
	--end
	term.setTextColor( colors.lightGray )
	write( "> " )
	--term.setTextColour( colours.white )
	
	local s = read( nil, tCommandHistory )
	table.insert( tCommandHistory, s )
	term.setTextColour( colours.black )
	
	local nForcePrint = 0
	local func, e = loadstring( s, "lua" )
	local func2, e2 = loadstring( "return "..s, "lua" )
	if not func then
		if func2 then
			func = func2
			e = nil
			nForcePrint = 1
		end
	else
		if func2 then
			func = func2
		end
	end
	
	if func then
        setfenv( func, tEnv )
        local tResults = { pcall( function() return func() end ) }
        if tResults[1] then
        	local n = 1
        	while (tResults[n + 1] ~= nil) or (n <= nForcePrint) do
        		print( tostring( tResults[n + 1] ) )
        		n = n + 1
        	end
        else
        	printError( tResults[2] )
        end
    else
    	printError( e )
    end
    
end

SpeedOS.Close()
