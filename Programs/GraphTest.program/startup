os.loadAPI("loader")
SpeedOS = loader.OS()

SpeedOS.ToolBarColour = colours.black
SpeedOS.ToolBarTextColour = colours.white

fs=SpeedOS.fs
os.loadAPI("SpeedAPI/graph")
os.loadAPI("SpeedAPI/peripheral")

local tab = 0

--our update function
function update()
  tab = tab + 1
  return tab
end

--our graph declaration.  We use nil as the gradientTable parameter, so it will use the default red-green gradient.
local graphInstance

if peripheral.find("monitor", true) then
  graphInstance = graph.new(peripheral.wrap(peripheral.find("monitor", true)), update, "Testing", nil, 0, 100)
  print("Running graph on monitor(side "..peripheral.find("monitor", true)..")")

else
  graphInstance = graph.new(term, update, "Testing", nil, 0, 100)

end

while true do
  --update the graph
  graphInstance:draw()
  sleep(0.5)
end
