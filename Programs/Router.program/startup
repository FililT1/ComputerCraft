-----------------------------------------------------------------------------------------------------------------------------------
-- Меняем цвет верхнего тулбара

if SpeedOS then
  SpeedOS.ToolBarColour = colours.lightGrey
  SpeedOS.ToolBarTextColour = colours.white
end

-----------------------------------------------------------------------------------------------------------------------------------
-- Подгружаем АПИ, которые обеспечат корректную работу программы

SpeedOS.LoadAPI("SpeedAPI/SpeedText")
SpeedOS.LoadAPI("SpeedAPI/windows")
SpeedOS.LoadAPI("SpeedAPI/peripheral")
SpeedOS.LoadAPI("SpeedAPI/config")

-----------------------------------------------------------------------------------------------------------------------------------
-- ЕБАТЬ КАСТОМИЗАЦИЯ!

pathToConfig = "System/Router.settings"

local redstone_side = config.read(pathToConfig, "output")
local rs_enabled = SpeedText.stringToBoolean(config.read(pathToConfig, "redstone signal enabled"))
local routing_enabled = false
local blacklisted = {}

-----------------------------------------------------------------------------------------------------------------------------------
-- Работает аналогично функции SpeedText.checkForelement: проверяет наличие элемента в массиве. В данном случае, массивом выступает список ID, от которых мы не будем ретранслировать сообщения по проводному модему. Мб уберу, не знаю.

function blacklist(id)
  for _, value in pairs(blacklisted) do
    if value == id then
      return false
    end
  end

  return true
end

-----------------------------------------------------------------------------------------------------------------------------------
-- Информирование пользователя о том, что к его компьютеру не подключен проводной модем, который необходим для работы программы

if not peripheral.find("LAN NIC", true) then
  windows.clearScreen(colors.white)
  windows.error("You need wired modem!")
  SpeedOS.Close()
end

-----------------------------------------------------------------------------------------------------------------------------------
-- Спрашиваем пользователя, какой частью проводной сети он будет выступать. Роутер ретранслирует сообщения из rednet-сети в проводную сеть, а ресивер - принимает сообщения от роутера. Роутеров и ресиверов может быть неограниченное количество.

windows.clearScreen(colors.white)

button = windows.select({"Hello!"},{"Do you want to use","your computer as router?"},{"No",colors.gray,colors.white}, {"Yes",colors.orange,colors.white})

-----------------------------------------------------------------------------------------------------------------------------------
-- Если пользователь согласился быть "роутером"

if button == "Yes" then
  if not peripheral.find("modem") then
    windows.clearScreen(colors.white)
    windows.error("You need wireless modem!")
    SpeedOS.Close()
  end

  rednet.open(peripheral.find("modem"))
  modem = peripheral.wrap(peripheral.find("LAN NIC", true))

  windows.clearScreen(colors.black)
  term.setCursorPos(1, 1)

  while true do
    event, id, msg, dist = os.pullEvent()

    if event == "rednet_message" and blacklist(id) then
      modem.send("<"..tostring(id).."> "..msg)
      print("<"..tostring(id).."> "..msg)
    end
  end
end

-----------------------------------------------------------------------------------------------------------------------------------
-- Если пользователь отказался быть "роутером". а хуле

if button == "No" then
  windows.clearScreen(colors.black)
  term.setCursorPos(1, 1)

  while true do
    event, side, id, channel, msg = os.pullEvent()

    if event == "lan_message" then 
      print(msg) 
      if rs_enabled then
        rs.setOutput(redstone_side, true) 
        sleep(0.5) 
        rs.setOutput(redstone_side, false) 
      end
    end
  end
end

-----------------------------------------------------------------------------------------------------------------------------------