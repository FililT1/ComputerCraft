-----------------------------------------------------------------------------------------------------------------------------------

if SpeedOS then
  SpeedOS.ToolBarColour = colours.lightGrey
  SpeedOS.ToolBarTextColour = colours.white
end

-----------------------------------------------------------------------------------------------------------------------------------

SpeedOS.LoadAPI("SpeedAPI/SpeedText")
SpeedOS.LoadAPI("SpeedAPI/windows")
SpeedOS.LoadAPI("SpeedAPI/peripheral")
SpeedOS.LoadAPI("SpeedAPI/config")

-----------------------------------------------------------------------------------------------------------------------------------

pathToConfig = "System/Router.settings"

local redstone_side = config.read(pathToConfig, "output")
local rs_enabled = SpeedText.stringToBoolean(config.read(pathToConfig, "redstone signal enabled"))
local routing_enabled = false
local blacklisted = {}

-----------------------------------------------------------------------------------------------------------------------------------

function blacklist(id)
  for _, value in pairs(blacklisted) do
    if value == id then
      return false
    end
  end

  return true
end

-----------------------------------------------------------------------------------------------------------------------------------

if not peripheral.find("LAN NIC", true) then
  windows.clearScreen(colors.white)
  windows.error("You need wired modem!")
  SpeedOS.Close()
end

-----------------------------------------------------------------------------------------------------------------------------------

button = windows.select({"Hello!"},{"Do you want to use","your computer as router?"},{"No",colors.gray,colors.white}, {"Yes",colors.orange,colors.white})

if button == "Yes" then
  routing_enabled = true
end

if routing_enabled then
  if not peripheral.find("modem") then
    windows.clearScreen(colors.white)
    windows.error("You need wireless modem!")
    SpeedOS.Close()
  end

  rednet.open(peripheral.find("modem"))
  modem = peripheral.wrap(peripheral.find("LAN NIC", true))

  windows.clearScreen(colors.black)
  term.setCursorPos(1, 1)

  while true do
    event, id, msg, dist = os.pullEvent()
    if event == "rednet_message" and blacklist(id) then
      modem.send("<"..tostring(id).."> "..msg)
      print("<"..tostring(id).."> "..msg)
    end
  end

else

  windows.clearScreen(colors.black)
  term.setCursorPos(1, 1)

  while true do
    event, side, id, channel, msg = os.pullEvent()
    if event == "lan_message" then 
      print(msg) 
      if rs_enabled then
        rs.setOutput(redstone_side, true) 
        sleep(0.5) 
        rs.setOutput(redstone_side, false) 
      end
    end
  end
end
