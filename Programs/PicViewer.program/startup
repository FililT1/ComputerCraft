os.loadAPI("loader")
SpeedOS = loader.OS()

SpeedOS.ToolBarColour = colours.grey
SpeedOS.ToolBarTextColour = colours.white

fs=SpeedOS.fs
os.loadAPI("SpeedAPI/windows")
os.loadAPI("SpeedAPI/peripheral")
os.loadAPI("SpeedAPI/lddfm")

term.setCursorPos(1, 1)
term.clear()


local args = {...}
local use_monitor = false
local monitor

if peripheral.find("monitor", true) then
  term.setCursorPos(1, 1)
  windows.clearScreen(colors.white)
  button = windows.select({"Detected monitor!"},{"Do you want to use", "monitor?"},{"No",colors.gray,colors.white}, {"Yes",colors.orange,colors.white})
  if button == "Yes" then
    use_monitor = true
    monitor = peripheral.wrap(peripheral.find("monitor", true))   
    windows.clearScreen(colors.black) 

  else
    use_monitor = false  
    windows.clearScreen(colors.black) 
  end
end

function draw_picture(filename)
  term.clear()
  if use_monitor then
    term.redirect(monitor)  
    monitor.clear()
  end
  
  image = paintutils.loadImage(filename) 
  paintutils.drawImage(image, 1,1)
  while true do
    event, key = os.pullEvent()
    if event == "key" or event == "mouse_click" or event == "mouse_drag" or event == "monitor_touch" then break end
  end
  if use_monitor then
    monitor.setTextColor(colors.white)
    monitor.setBackgroundColor(colors.black)
    monitor.clear()
    monitor.setCursorPos(1, 1)
    term.restore()
    OneOS.Close()

  else
    OneOS.Close()
  end
end

if args[1] then
  draw_picture(tostring(args[1]))
  
else
  draw_picture(tostring(lddfm.makeMenu()))
end
