rednet.open("right")
rednet.open("left")
rednet.open("front")
rednet.open("back")
rednet.open("top")
rednet.open("bottom")

local stackWindow, viewerWindow, lines, scrollPos
local w, h = term.getSize()
local selectedLine
local stack = {

{}

}
local file = fs.open("/SpeedOS/Applications/Logs/sniffer.log", "w") 

local function drawTraceback()
    stackWindow = term -- if you have monitor peripheral.wrap("side") ili sam delai dolbaeb
    stackWindow.clear()
    stackWindow.setCursorPos(1, 1)
    stackWindow.setBackgroundColor(colors.white)
    stackWindow.setTextColor(colors.blue)
    stackWindow.clearLine()
    stackWindow.write(" Rednet Sniffer")
    stackWindow.setCursorPos(1, 2)
    stackWindow.setBackgroundColor(colors.black)
    stackWindow.setTextColor(colors.white)
    local numWidth, sourceWidth, nameWidth = 7, 6, 6
    stackWindow.write("ID")
    stackWindow.setCursorPos(numWidth, 2)
    stackWindow.write("Dist.")
    stackWindow.setCursorPos(numWidth + sourceWidth + 10, 2)
    stackWindow.write("Msg")
    for i,v in ipairs(stack) do
        stackWindow.setCursorPos(1, i + 2)
        stackWindow.setBackgroundColor(selectedLine == i+1 and colors.blue or (i % 2 == 1 and colors.gray or colors.black))
        stackWindow.setTextColor(colors.white)
        stackWindow.clearLine()
        stackWindow.write(v.id)
        stackWindow.setCursorPos(numWidth, i + 2)
        stackWindow.write(v.dist)
        stackWindow.setCursorPos(numWidth + sourceWidth + 10, i + 2)
        stackWindow.write(v.msg)
       -- stackWindow.setCursorPos(numWidth + sourceWidth + nameWidth, i + 2)
        --stackWindow.write(textutils.formatTime(v.time))
    end
    if #stack < h - 1 then for i = #stack + 1, h - 1 do 
        stackWindow.setCursorPos(1, i + 2)
        stackWindow.setBackgroundColor(i % 2 == 1 and colors.gray or colors.black)
        stackWindow.clearLine()
    end end
end

drawTraceback()

while true do
    event, senderID, msg, dist = os.pullEvent()
    if event == "rednet_message" then
	    table.insert(stack, {id = tostring(senderID), dist = tostring(dist), msg = tostring(msg)})
    	drawTraceback()
	    if file then
	    local time = os.time()
            local formattedTime = textutils.formatTime(time, false)
            file.writeLine("["..formattedTime.."] Received message from ID "..tostring(senderID).." with distance "..tostring(dist).." : "..tostring(msg))
            file.writeLine("")
            file.flush()
     end

    elseif event == "mouse_scroll" then
        stack = { {} }
        drawTraceback()

    end
end