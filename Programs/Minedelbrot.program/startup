if SpeedOS then
	SpeedOS.ToolBarColour = colours.grey
	SpeedOS.ToolBarTextColour = colours.white
end

SpeedOS.LoadAPI("SpeedAPI/peripheral")
SpeedOS.LoadAPI("SpeedAPI/windows")
SpeedOS.LoadAPI("SpeedAPI/SpeedText")
SpeedOS.LoadAPI("SpeedAPI/config")
SpeedOS.LoadAPI("System/API/Settings")

local monitor = nil

if peripheral.find("monitor", true) then
	monitor = peripheral.wrap(peripheral.find("monitor", true))
end

function clearMon()
  if monitor then
	  monitor.setBackgroundColor(colors.black)
	  monitor.clear()
  else
	  windows.clearScreen(colors.black)
  end
end

local toMonitor = false

windows.clearScreen(colors.white)
if peripheral.find("monitor", true) then
	govno = windows.select({"Detected monitor!"},{"Do you want to use it?"},{"No",colors.gray,colors.white},{"Yes",colors.orange,colors.white})
end

if govno == "Yes" then
	toMonitor = true
	windows.clearScreen(colors.white)
	term.setTextColour(colours.lightGrey)
	SpeedText.cPrint("Use your mouse to zoom!")
  SpeedText.cPrint("You can exit by Q", 10)
end

if toMonitor then
  monitor.setTextScale(tonumber(config.read("System/Minedelbrot.settings", "monitor_scale")))
end

if not toMonitor then
w,h = term.getSize()
else
w,h = monitor.getSize()
end

originX, originY, zoom = w/2,h/2,1

function debugLog(message)
  local file = fs.open("Resources/debug.log","a")
  file.writeLine(message)
  file.close()
end

function scale(x,y)
  x0 = (3.5 * (x-1+(originX-w/2)) / w) - 2.5
  y0 = (2 * (y-1+(originY-h/2)) / h) - 1
  --debugLog(x..","..y.."="..x0..","..y0)
  return x0/zoom,y0/zoom
end

function getColor(iter)
  if iter == 1000 then
        return colors.black
  end

  return bit.blshift(1,(math.floor(iter/2))%15+1)  
end

debugLog("w: "..w.." h: "..h)
function drawMandelbrot()
for j = 1,h do
  for i = 1,w do

        x0,y0 = scale(i,j,zoom)
        
        x = 0
        y = 0
        
        iter = 0
        maxIter = 1000
        
        while x*x + y*y < 2*2 and iter < maxIter do
        
          xTemp = x*x - y*y + x0
          y = 2*x*y + y0
          x = xTemp
          
          iter = iter + 1

        end
        
        bgColor = getColor(iter)
--      print(iter)

        if toMonitor then       
          monitor.setBackgroundColor(bgColor)
          monitor.setCursorPos(i,j)
          monitor.write(" ")  
        else
          term.setBackgroundColor(bgColor)
          term.setCursorPos(i,j)
          term.write(" ")
        end

  end
  sleep(.1)
end
end

clearMon()
drawMandelbrot()

while true do
  event, button, mx, my = os.pullEvent()

  if event == "mouse_click" and button == 1 then
        zoom = zoom + 1
  elseif event == "mouse_click" and button == 2 then
        zoom = zoom - 1
  end

  if event == "key" and button == keys.q then
    if toMonitor then
      monitor.setBackgroundColor(colors.black)
      monitor.setTextColor(colors.white)
      monitor.clear()
      monitor.setCursorPos(1, 1)
      monitor.setTextScale(1)
    end

    SpeedOS.Close()
  end

  if event == "mouse_click" then
    originX, originY = mx/zoom,my/zoom

    if zoom < 1 then zoom = 1 end

    clearMon()
    drawMandelbrot()
  end
end
