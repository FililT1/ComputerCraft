fs=OneOS.fs
--[[
Пояснения:
        AC: x и y - абсолютные координаты
        RC: x и y - относительные координаты
]]--
--monitors[j][i][id/xSize/ySize/xStart/xEnd/yStart/yEnd]
--ПЕРЕМЕННЫЕ--
local CurrentMonitor = nil
local Monitors       = nil
 
local CursorPosX, CursorPosY = 1, 1
 
local BGColor = colors.black
local TextColor = colors.white
local Scale = 1
 
--ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ--
function PointInRect(x, y, sx, sy, ex, ey)
        if (x >= sx) and (x <= ex) and (y >= sy) and (y <= ey) then return true end
       
        return false

end
 
--ПРОГРАММА--
 
--Получить относительные координаты точки по абсолютным координатам
function GetRelativeCursorPos(ax, ay)
        local MonitorID = nil
        local PosX  = nil
        local PosY  = nil
       
        for j = 1, Monitors["monitorsCountInHeight"], 1 do
                for i = 1, Monitors["monitorsCountInWidth"], 1 do
                       
                        if PointInRect(ax, ay, Monitors[j][i]["xStart"], Monitors[j][i]["yStart"], Monitors[j][i]["xEnd"], Monitors[j][i]["yEnd"]) then
                                PosX = ax - Monitors[j][i]["xStart"] + 1
                                PosY = ay - Monitors[j][i]["yStart"] + 1
                                MonitorID = Monitors[j][i]["id"]
                                return MonitorID, PosX, PosY, i, j
                        end
                end
        end
       
        return nil
end
 
--Получить абсолютные координаты точки по относительным координатам
function GetAbsoluteCursorPos(MonitorID, rx, ry)
        local PosX = nil
        local PosY = nil
 
        for j = 1, Monitors["monitorsCountInHeight"], 1 do
                for i = 1, Monitors["monitorsCountInWidth"], 1 do
                        if Monitors[j][i]["id"] == MonitorID then
                                PosX = Monitors[j][i]["xStart"] + rx - 1
                                PosY = Monitors[j][i]["yStart"] + ry - 1
                                return PosX, PosY, i, j
                        end
                end
        end
       
        return nil
end
 
--Инициализация API
function Init()
        if not fs.exists("System/ClusterCalibration.settings") then error("Calibration config not found.") end
        file = fs.open("System/ClusterCalibration.settings", "r")
        local _data = file.readAll(monitors)
        file.close()
       
        Monitors = textutils.unserialize(_data)
        SetMonitorParameters(nil, nil, Monitors["monitorsScale"])
        SetCursorPos(CursorPosX, CursorPosY)
end
 
--Установка абсолютной точки
function SetCursorPos(ax, ay)
        CursorPosX, CursorPosY = ax, ay
       
        local _m, _rx, _ry = GetRelativeCursorPos(CursorPosX, CursorPosY)
        CurrentMonitor = peripheral.wrap(_m)
        CurrentMonitor.setCursorPos(_rx, _ry)
end
 
--Вывод текста
function WriteText(str)
        for s in string.gmatch(str, ".") do
                if CursorPosY > Monitors["totalMonitorSizeY"] then
                        break
                elseif s == '\n' then
                        CursorPosX = 0
                        CursorPosY = CursorPosY + 1
                elseif CursorPosX + 1 > Monitors["totalMonitorSizeX"] then
                        CurrentMonitor.write(s)
                        CursorPosX = 1
                        CursorPosY = CursorPosY + 1
                        SetCursorPos(CursorPosX, CursorPosY)
                else
                        CurrentMonitor.write(s)
                        CursorPosX = CursorPosX + 1
                        SetCursorPos(CursorPosX, CursorPosY)
                end
        end
end
 
--Установка цветов\размера символов
function SetMonitorParameters(backgroundcolor, textcolor, scale)
        BGColor = backgroundcolor or BGColor
        TextColor = textcolor or TextColor
        Scale = scale or Scale
       
        for j = 1, Monitors["monitorsCountInHeight"], 1 do
                for i = 1, Monitors["monitorsCountInWidth"], 1 do
                        local _m = peripheral.wrap(Monitors[j][i]["id"])
                        _m.setBackgroundColor(BGColor)
                        _m.setTextColor(TextColor)
                        _m.setTextScale(Scale)
                end
        end
end
 
--Очистка
function ClearAll()
        for j = 1, Monitors["monitorsCountInHeight"], 1 do
                for i = 1, Monitors["monitorsCountInWidth"], 1 do
                        local _m = peripheral.wrap(Monitors[j][i]["id"])
                        _m.setBackgroundColor(BGColor)
                        _m.setTextColor(TextColor)
                        _m.clear()
                end
        end
end
 
Init()