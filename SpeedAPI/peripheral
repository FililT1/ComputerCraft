-- v1.4.1
native = peripheral.native or peripheral
local native = native

dolbaeb = {'top', 'bottom', 'front', 'back', 'left', 'right', 'top:white', 'top:orange', 'top:magenta', 'top:lightBlue', 'top:yellow', 'top:lime', 'top:pink', 'top:gray', 'top:cyan', 'top:purple', 'top:blue', 'top:brown', 'top:green', 'top:red', 'top:black', 'bottom:white', 'bottom:orange', 'bottom:magenta', 'bottom:lightBlue', 'bottom:yellow', 'bottom:lime', 'bottom:pink', 'bottom:gray', 'bottom:cyan', 'bottom:purple', 'bottom:blue', 'bottom:brown', 'bottom:green', 'bottom:red', 'bottom:black', 'front:white', 'front:orange', 'front:magenta', 'front:lightBlue', 'front:yellow', 'front:lime', 'front:pink', 'front:gray', 'front:cyan', 'front:purple', 'front:blue', 'front:brown', 'front:green', 'front:red', 'front:black', 'back:white', 'back:orange', 'back:magenta', 'back:lightBlue', 'back:yellow', 'back:lime', 'back:pink', 'back:gray', 'back:cyan', 'back:purple', 'back:blue', 'back:brown', 'back:green', 'back:red', 'back:black', 'left:white', 'left:orange', 'left:magenta', 'left:lightBlue', 'left:yellow', 'left:lime', 'left:pink', 'left:gray', 'left:cyan', 'left:purple', 'left:blue', 'left:brown', 'left:green', 'left:red', 'left:black', 'right:white', 'right:orange', 'right:magenta', 'right:lightBlue', 'right:yellow', 'right:lime', 'right:pink', 'right:gray', 'right:cyan', 'right:purple', 'right:blue', 'right:brown', 'right:green', 'right:red', 'right:black'}

function getNames()
	local dolbaeb = {'top', 'bottom', 'front', 'back', 'left', 'right', 'top:white', 'top:orange', 'top:magenta', 'top:lightBlue', 'top:yellow', 'top:lime', 'top:pink', 'top:gray', 'top:cyan', 'top:purple', 'top:blue', 'top:brown', 'top:green', 'top:red', 'top:black', 'bottom:white', 'bottom:orange', 'bottom:magenta', 'bottom:lightBlue', 'bottom:yellow', 'bottom:lime', 'bottom:pink', 'bottom:gray', 'bottom:cyan', 'bottom:purple', 'bottom:blue', 'bottom:brown', 'bottom:green', 'bottom:red', 'bottom:black', 'front:white', 'front:orange', 'front:magenta', 'front:lightBlue', 'front:yellow', 'front:lime', 'front:pink', 'front:gray', 'front:cyan', 'front:purple', 'front:blue', 'front:brown', 'front:green', 'front:red', 'front:black', 'back:white', 'back:orange', 'back:magenta', 'back:lightBlue', 'back:yellow', 'back:lime', 'back:pink', 'back:gray', 'back:cyan', 'back:purple', 'back:blue', 'back:brown', 'back:green', 'back:red', 'back:black', 'left:white', 'left:orange', 'left:magenta', 'left:lightBlue', 'left:yellow', 'left:lime', 'left:pink', 'left:gray', 'left:cyan', 'left:purple', 'left:blue', 'left:brown', 'left:green', 'left:red', 'left:black', 'right:white', 'right:orange', 'right:magenta', 'right:lightBlue', 'right:yellow', 'right:lime', 'right:pink', 'right:gray', 'right:cyan', 'right:purple', 'right:blue', 'right:brown', 'right:green', 'right:red', 'right:black'}
	local tResults = {}
	for n,sSide in ipairs( dolbaeb ) do
		if peripheral.isPresent( sSide ) then
			table.insert( tResults, sSide )
			isWireless = true
			--end     
		end
	end
	return tResults
end

function find( sType, cable )
 _color = {"white",
           "orange",
           "magenta",
           "lightBlue",
           "yellow",
           "lime",
           "pink",
           "gray",
 --          "lightGray",
           "cyan",
           "purple",
           "blue",
           "brown",
           "green",
           "red",
           "black"} 
 
 for _, value in pairs(rs.getSides()) do
  	if peripheral.getType(value) == sType then
    	  return value
   end
   
   if cable then
     for _, _value in pairs(_color) do
       if peripheral.getType(value..":".._value) == sType then
        return value..":".._value         
       end
     end
   end
 end
end

local function decode(side)
	local lside, color = side:match("(%w%w*):(%w%w*)")
	
	if lside then
		return lside, color
	end
	
	return side
end

-- This can remain the same
wrap = native.wrap

function isPresent(side)
	local color
	side, color = decode(side)
	
	if not native.isPresent(side) then 
		return false
	end
	
	if color then 
		if native.getType(side) ~= "cable" then
			return false
		end
		return native.call(side, "isPresent", color)
	end
	
	return true
end

function getType(side)
	local color
	side, color = decode(side)
	
	if color then 
		if native.getType(side) ~= "cable" then
			return nil
		end
		return native.call(side, "getType", color)
	end
	
	return native.getType(side)
end

function getMethods(side)
	local color
	side, color = decode(side)
	
	if color then 
		if native.getType(side) ~= "cable" then
			return nil
		end
		return native.call(side, "getMethods", color)
	end
	
	return native.getMethods(side)
end

function call(side, method, ...)
	local color
	side, color = decode(side)
	
	if color then 
		if native.getType(side) ~= "cable" then
			error("No peripheral attached")
		end
		return native.call(side, "call", color, method, ...)
	end
	
	return native.call(side, method, ...)
end

function getSides()
	local sides = rs.getSides()
	
	for i,side in ipairs(rs.getSides()) do
		if native.getType(side) == "cable" then
			local lsides = { native.call(side, "list") }
			for _,ls in ipairs(lsides) do
				table.insert(sides, i, ls)
			end
		end
	end
	
	return sides
end

function getTypeSides(sType)
	local dolbaeb = {'top', 'bottom', 'front', 'back', 'left', 'right', 'top:white', 'top:orange', 'top:magenta', 'top:lightBlue', 'top:yellow', 'top:lime', 'top:pink', 'top:gray', 'top:cyan', 'top:purple', 'top:blue', 'top:brown', 'top:green', 'top:red', 'top:black', 'bottom:white', 'bottom:orange', 'bottom:magenta', 'bottom:lightBlue', 'bottom:yellow', 'bottom:lime', 'bottom:pink', 'bottom:gray', 'bottom:cyan', 'bottom:purple', 'bottom:blue', 'bottom:brown', 'bottom:green', 'bottom:red', 'bottom:black', 'front:white', 'front:orange', 'front:magenta', 'front:lightBlue', 'front:yellow', 'front:lime', 'front:pink', 'front:gray', 'front:cyan', 'front:purple', 'front:blue', 'front:brown', 'front:green', 'front:red', 'front:black', 'back:white', 'back:orange', 'back:magenta', 'back:lightBlue', 'back:yellow', 'back:lime', 'back:pink', 'back:gray', 'back:cyan', 'back:purple', 'back:blue', 'back:brown', 'back:green', 'back:red', 'back:black', 'left:white', 'left:orange', 'left:magenta', 'left:lightBlue', 'left:yellow', 'left:lime', 'left:pink', 'left:gray', 'left:cyan', 'left:purple', 'left:blue', 'left:brown', 'left:green', 'left:red', 'left:black', 'right:white', 'right:orange', 'right:magenta', 'right:lightBlue', 'right:yellow', 'right:lime', 'right:pink', 'right:gray', 'right:cyan', 'right:purple', 'right:blue', 'right:brown', 'right:green', 'right:red', 'right:black'}

	local eblo = {}

	for _, i in pairs(dolbaeb) do
		if peripheral.getType(i) == sType then
			table.insert(eblo, i)
		end
	end

	return eblo
end
